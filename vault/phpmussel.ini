; Be aware that phpMussel is still in its earliest stages of development, and a lot of what you see may change with time.

[general]
; SECTION RELATING TO GENERAL CONFIGURATION OF PHPMUSSEL
; Cleanup variables and cache used by the script after initial scanning of uploads? 0 = No, 1 = Yes [Default].
; If you are -not- using the script beyond the initial scanning of uploads, should set to yes, to minimize memory usage.
; If you -are- using the script for purposes beyond the initial scanning of uploads, should set to no, to avoid unnecessarily
; reloading duplicate data into memory.
; In general practise, it should probably be set to yes, but, if you do this, you won't be able to use the script for anything
; other than scanning file uploads.
cleanup=1
; Log the results of all scanning to a file? If yes, specify the name of the file to log results to. If no, leave this variable blank.
scan_log="scan_log.txt"
; Log the results of all blocked or killed uploads to a file? If yes, specify the name of the file to log results to. If no, leave this variable blank.
scan_kills="scan_kills.txt"
; Where to find IP address of connecting request? (Useful for service such as Cloudflare and the likes) Default = REMOTE_ADDR
; WARNING; Don't change this unless you know what you're doing!
ipaddr="REMOTE_ADDR"
; Should phpMussel send 403 headers with the file upload blocked message, or stick with the usual 200 OK? 0 = No (200) [Default], 1 Yes (403).
forbid_on_block=0
; (Supported, and no known problems thus far) Check against ClamAV MD5 signatures when scanning? 0 = No, 1 = Yes [Default].

[clamav]
; SECTION RELATING TO CLAMAV SIGNATURES
md5=1
; (Supported, but takes a -very- long time to complete, ignores -some- signatures, but works) Check against ClamAV basic signatures when scanning? 0 = No [Default], 1 = Yes.
basic=0
; (Supported, and no known problems thus far) Check against ClamAV Zip MetaData signatures when scanning? 0 = No, 1 = Yes [Default].
zip_metadata=1
; (Not yet supported at all, future planned feature) Check against ClamAV extended signatures when scanning?
; extended=0
; (Not yet supported at all, future planned feature) Check against ClamAV whitelist signatures when scanning?
; whitelist=0
; (Bytecode options after this, if I can get that done at some point; Not yet supported at all, future planned feature)
; bytecode=0

[files]
; SECTION RELATING TO GENERAL HANDLING OF FILES
; Maximum allowable number of files to scan during files upload scan before aborting the scan and informing the user they are uploading too much at once!
; Provides protection against a theoretical attack whereby an attacker attempts to DDoS your system or CMS by overloading phpMussel to slow down the
; php process to a grinding halt. Recommended: 10. You may wish to raise or lower this number depending on the speed of your hardware.
; Note that this number does not account for or include the contents of archives.
max_uploads=10
; Filesize limit in KB. 32768 = 32MB [Default], 0 = No limit (always greylisted), any (positive) numeric value accepted.
; This can be useful when your php configuration limits the amount of memory a process can hold or if your php configuration limits filesize of uploads.
filesize_limit=32768
; What to do with files that exceed the filesize limit (if one exists)? 0 - Whitelist [Default], 1 - Blacklist.
filesize_response=0
; If your system only allows specific types of files to be uploaded, or if your system explicitly denies certain types of files,
; specifying those filetypes in whitelists and blacklists can increase the speed at which scanning is performed by allowing the
; script to skip over certain filetypes. Format is CSV (comma separated values).
; If you want to scan everything, rather than whitelist or blacklist, leave the variable(/s) blank (doing so will disable whitelist/blacklist).
; Example Whitelist (default is blank):
;    filetype_whitelist="7z,avi,css,doc,docm,docx,dot,dotm,dotx,fodg,fodp,fods,fodt,gif,gz,htm,html,jpeg,jpg,js,mid,mp2,mp3,mp4,mpa,mpeg,mpg,odb,odc,odf,odg,odm,odp,ods,odt,ogg,otg,oth,otp,ots,ott,orp,pdf,png,pot,potm,potx,ppa,ppam,pps,ppsm,ppsx,ppt,pptm,pptx,rar,rmi,rtf,rtx,stm,svg,swf,tar,txt,utf,xhtml,xla,xlam,xls,xlsb,xlsm,xlsx,xlt,xltm,xltx,xls,xml,wma,zip,wmv"
filetype_whitelist=""
; Default Blacklist:
;    filetype_blacklist="acc*,acm,act*,apk,app,ax,bat,bin,cgi,cmd,com*,cpl,csh,dll,drv,exe,gad*,hta*,htp*,ico,inf,ins,inx,ipa,isu,job,js,jse,ksh,lnk,msc,msi,msp,mst,ocx,osx,out,paf,php*,pif,pl,prg,ps1,reg,rgs,rs,run,scr*,sct,shb,shs,sql*,sys,u3p,url,vb,vbe,vbs*,wor*,ws,wsf"
filetype_blacklist="acc*,acm,act*,apk,app,ax,bat,bin,cgi,cmd,com*,cpl,csh,dll,drv,exe,gad*,hta*,htp*,ico,inf,ins,inx,ipa,isu,job,js,jse,ksh,lnk,msc,msi,msp,mst,ocx,osx,out,paf,php*,pif,pl,prg,ps1,reg,rgs,rs,run,scr*,sct,shb,shs,sql*,sys,u3p,url,vb,vbe,vbs*,wor*,ws,wsf"
; Attempt to check the contents of archives? 0 - No (do not check), 1 - Yes (check) [Default].
; - Currently, only checking of ZIP files is supported (checking of GZ, TAR, RAR, CAB, 7z and etcetera not currently supported).
; - This is not foolproof! While I highly recommend keeping this turned on, I can't guarantee it'll always find everything.
; - Also be aware that archive checking currently is not recursive (although I intend to correct this at some point).
check_archives=1
; Carry over filesize blacklisting/whitelisting to the contents of archives? 0 - No (just greylist everything), 1 - Yes [Default].
filesize_archives=1
; Carry over filetype blacklisting/whitelisting to the contents of archives? 0 - No (just greylist everything) [Default], 1 - Yes.
filetype_archives=0
; Switching on this option will instruct the script to attempt to immediately delete any file it finds during its scans that
; matches any detection criteria, whether via signatures or otherwise. Files determined to be "clean" will not be touched.
; In the case of archives, the entire archive will be deleted (regardless of if the offending file is only one of several files
; contained within the archive). For the case of file upload scanning, usually, it isn't necessary to turn this option on,
; because usually, php will automatically purge the contents of its cache when execution has finished, meaning that it'll
; usually delete any files uploaded through it to the server unless they've moved, copied or deleted already.
; The option is added here as an extra measure of security for the extra paranoid and for those whose copies of php may not
; always behave in the manner intended.
; 0 - After scanning, leave the file alone [Default], 1 - After scanning, if not clean, delete immediately.
delete_on_sight=0

[attack_specific]
; SECTION RELATING TO SPECIFIC ATTACK DETECTIONS WHICH ARE UNRELATED TO PORTED DETECTIONS SUCH AS THE CLAMAV SIGNATURES
; Chameleon attack detection. 0 = Off, 1 = On.
; chameleon_from_php: Search for php header in files that are neither php files nor recognised archives.
chameleon_from_php=1
; chameleon_from_exe: Search for executable headers in files that are neither executables nor recognised archives and for executables whose headers are incorrect.
chameleon_from_exe=1
; chameleon_to_archive: Search for archives whose headers are incorrect (Supported: ZIP, RAR).
chameleon_to_archive=1
; chameleon_to_archive: Search for office documents whose headers are incorrect (Supported: DOC).
chameleon_to_doc=1
; chameleon_to_img: Search for images whose headers are incorrect (Supported: BMP, DIB, PNG, GIF, JPEG, JPG, XCF, PSD, PDD).
chameleon_to_img=1
; chameleon_to_pdf: Search for PDF files whose headers are incorrect.
chameleon_to_pdf=1
; Recognised archive file extensions (format is CSV; should only add or remove when problems occur;
; unnecessarily removing may cause false-positives to appear for archive files, whereas unnecessarily adding will essentially whitelist what you are
; adding from attack specific detection; modify with caution; also note that this has no effect on what archives can and can't be analysed at content-level).
; The list, as is at default, lists those formats used most commonly across the majority of systems and CMS, but intentionally isn't necessarily comprehensive.
archive_file_extensions="7z,a,ace,alz,ar,arc,arj,ba,bh,bz2,dmg,gz,ice,iso,lha,lz,lzh,lzo,lzw,lzx,mar,pak,pea,rar,rz,s7z,sea,sen,sfx,shar,sqx,tar,tgz,tlz,xar,xp3,xz,yz1,z,zz"
archive_file_extensions_wc="paq*,sit*,tbz*,zip*"
; Search content of files for general commands such as eval(), exec() and include()? 0 - No (do not check) [Default], 1 - Yes (check).
; Turn this option off if you intend to upload any of the following to your system or CMS via your browser: php, JavaScript, HTML, python, perl files and etcetera.
; Turn this option on if you do not have any additional protections on your system and do not intend to upload such files.
; If you use additional security in conjunction with phpMussel such as ZB Block, there is no need to turn this option on, because most of what phpMussel will look
; for (in the context of this option) are duplications of protections that are already provided.
general_commands=0

[template_data]
; SECTION RELATING TO TEMPLATE DATA
; Template data relates to the "template.html" file used to display the file upload blocked page.
; It's here mostly due to planned future features which I'm holding off from until all general scanning features have been
; completed and fully supported.
; Until future versions, you don't need to worry about this section, but, can play around with it if you want to, of course.
; "{foo}" in "template.html" should be replaced with "bar" (without quotation marks) by the script prior to page output.
; This, HTML in the template file like <p><font size="12">{foo}</font></p>
; will be rendered for the end-user like <p><font size="12">bar</font></p>
foo="bar"
